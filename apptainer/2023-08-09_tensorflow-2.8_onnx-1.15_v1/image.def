# I6 TF image using Ubuntu 20.04 and Cuda 11.6.2 from official nvidia images
# For release notes see https://docs.nvidia.com/deeplearning/frameworks/tensorflow-release-notes/rel_21-08.html
Bootstrap: docker
From: nvcr.io/nvidia/tensorflow:22.04-tf2-py3
Stage: build

%post
    apt update -y

    # all the fundamental basics, zsh is need because calling the cache manager might launch the user shell
    DEBIAN_FRONTEND=noninteractive apt install -y wget git unzip gzip libssl-dev lsb-release zsh \
        bison libxml2-dev libopenblas-dev libsndfile1-dev libcrypto++-dev libcppunit-dev \
        parallel xmlstarlet python3-lxml htop strace gdb sox python3-pip cmake

    # download the cache manager and place in /usr/local
    cd /usr/local
    git clone https://github.com/rwth-i6/cache-manager.git
    cd bin
    ln -s ../cache-manager/cf cf

    # Rebuild TF for right compute capabilities and CXX11_ABI
    cd /opt/tensorflow
    sed -i "s/D_GLIBCXX_USE_CXX11_ABI=0/D_GLIBCXX_USE_CXX11_ABI=1/" nvbuildopts  # Enable CXX11 ABI
    sed -i 's/$/ --local_cpu_resources=HOST_CPUS*0.5 --local_ram_resources=HOST_RAM*0.5/' nvbuildopts # prevent bazel from taking all the resources
    ./nvbuild.sh --v2 --sm 6.1,7.5,8.6  # GTX 1080, RTX 2080, RTX 3090

    ln -s /usr/local/lib/tensorflow/libtensorflow_cc.so.2 /usr/local/lib/tensorflow/libtensorflow_cc.so
    ln -s /usr/local/lib/python3.8/dist-packages/tensorflow/libtensorflow_framework.so.2 /usr/local/lib/tensorflow/libtensorflow_framework.so.2
    ln -s /usr/local/lib/tensorflow/libtensorflow_framework.so.2 /usr/local/lib/tensorflow/libtensorflow_framework.so

    echo /usr/local/lib/tensorflow > /etc/ld.so.conf.d/tensorflow.conf
    ldconfig

    cd /usr/local
    wget -q https://github.com/microsoft/onnxruntime/releases/download/v1.15.1/onnxruntime-linux-x64-gpu-1.15.1.tgz
    tar xzvf onnxruntime-linux-x64-*.tgz
    mkdir -p /usr/local/{include,lib}
    mv onnxruntime-linux-x64-*/include/* /usr/local/include/
    mv onnxruntime-linux-x64-*/lib/* /usr/local/lib/
    rm -r onnxruntime-linux-x64-*
    ldconfig

