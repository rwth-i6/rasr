# -------- logging --------
[*]
configuration.channel    = output-channel
dot.channel              = nil
encoding                 = UTF-8
error.channel            = output-channel, stderr
log.channel              = output-channel
progress.channel         = output-channel
real-time-factor.channel = output-channel
statistics.channel       = output-channel
system-info.channel      = output-channel
time.channel             = output-channel
version.channel          = output-channel
warning.channel          = output-channel, stderr

[*.output-channel]
append     = no
compressed = no
file       = $(LOGFILE)
unbuffered = yes


# -------- global setup: data corpus, lexicon, etc. --------
[flf-lattice-tool.corpus]
audio-dir                      = /
capitalize-transcriptions      = no
file                           = /u/corpora/speech/LibriSpeech/corpora/dev-other.corpus
progress-indication            = global
warn-about-unexpected-elements = yes

[flf-lattice-tool.global-cache]
file = global.cache

[flf-lattice-tool.lexicon]
file                    = adsm.lexicon.xml.gz
normalize-pronunciation = no


# -------- complete processing flow network -------- #
[flf-lattice-tool.network]
initial-nodes = segment

[flf-lattice-tool.network.segment]
links = 1->recognizer:1 0->archive-writer:1
type  = speech-segment

[flf-lattice-tool.network.archive-writer]
format = flf
info   = yes
links  = sink:1
path   = lattice.cache.$(TASK)
type   = archive-writer

[flf-lattice-tool.network.sink]
error-on-empty-lattice = no
type                   = sink
warn-on-empty-lattice  = yes


# -------- recognizer --------
[flf-lattice-tool.network.recognizer]
type                          = recognizer
links                         = archive-writer
use-acoustic-model            = no
pronunciation-scale           = 1.0
lm.type                       = simple-history # no LM applied
search-type                   = generic-seq2seq-tree-search

# ---- pre-computed CTC scores ----
[flf-lattice-tool.network.recognizer.feature-extraction]
file = feature.flow

[flf-lattice-tool.network.recognizer.feature-extraction.tf-fwd.input-map.info-0]
param-name             = features
seq-length-tensor-name = extern_data/placeholders/data/data_dim0_size
tensor-name            = extern_data/placeholders/data/data

[flf-lattice-tool.network.recognizer.feature-extraction.tf-fwd.output-map.info-0]
param-name  = log-posteriors
tensor-name = output/output_batch_major

[flf-lattice-tool.network.recognizer.feature-extraction.tf-fwd.loader]
meta-graph-file    = /u/zhou/asr-exps/librispeech/2021-06-16_ADSM/work/crnn/compile/CompileTFGraphJob.0ftEJHBytjDq/output/graph.meta
saved-model-file   = /u/zhou/asr-exps/librispeech/2021-06-16_ADSM/work/crnn/custom_sprint_training/CustomCRNNSprintTrainingJob.zjJAYpTLXtoH/output/models/epoch.240
type               = meta

# ---- S2S label scorer ----
[flf-lattice-tool.network.recognizer.label-scorer]
blank-label-index = 0
label-file        = /u/zhou/asr-exps/librispeech/dependencies/ADSM/iter2-refine-final_subsample4/ctc-train/vocab
label-scorer-type = precomputed-log-posterior
scale             = 1.0

# ---- S2S Tree Search ----
[flf-lattice-tool.network.recognizer.recognizer]
allow-blank-label            = yes
allow-label-loop             = yes
allow-label-recombination    = yes
allow-word-end-recombination = yes
create-lattice               = no
optimize-lattice             = no
use-lm-score                 = no
lm-lookahead                 = no

# greedy search within a single tree only
label-pruning                = 0   # best score only
label-pruning-limit          = 64  # histogram pruning: some upper limit never reached here
word-end-pruning             = 0
word-end-pruning-limit       = 64
separate-recombination-lm    = yes
recombination-lm.type        = zerogram

[flf-lattice-tool.network.recognizer.recognizer.label-tree]
label-unit   = word
skip-silence = yes

